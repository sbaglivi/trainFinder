import pandas as pd

json_data = pd.read_json('data.json')
df = pd.json_normalize(json_data['solutions'], 
        meta=[['solution','origin'], ['solution', 'destination'], ['solution', 'departureTime'], ['solution', 'arrivalTime']])

solutions = df[df['solution.status'] == "SALEABLE"][['solution.id','solution.departureTime','solution.arrivalTime','solution.duration','solution.origin','solution.destination','grids']]

def findPrices(row):
    priorityOrder = ['STANDARD', 'STANDARD AREA SILENZIO', 'PREMIUM', 'BUSINESS', 'BUSINESS AREA SILENZIO'] 
    pricesFound = {
            'young': -1,
            'senior' : -1,
            'adult' : -1
            }
    def allPricesFound():
        return pricesFound['young'] != -1 and pricesFound['senior'] != -1 and pricesFound['adult'] != -1
    while (len(priorityOrder) > 0 and not allPricesFound()):
        searchedServiceFound = False
        for service in row['grids'][0].services:
            if searchedServiceFound:
                break
        if (service.name == priorityOrder[0]):
            if service.status != 'SALEABLE':
                break
            for offer in service.offers:
                if offer.status != 'SALEABLE':
                    continue
                if offer.name == 'YOUNG':
                    if (pricesFound.young == -1 or offer.price.amount < pricesFound.young):
                        pricesFound.young = offer.price.amount
                elif offer.name == 'SENIOR':
                    if (pricesFound.senior == -1 or offer.price.amount < pricesFound.senior):
                        pricesFound.senior = offer.price.amount
                else:
                    if (pricesFound.adult == -1 or offer.price.amount < pricesFound.adult):
                        pricesFound.adult = offer.price.amount
                searchedServiceFound = True
                break
        priorityOrder.pop(0)
    row.young = pricesFound.young
    row.senior = pricesFound.senior
    row.adult = pricesFound.adult
    return row


solutionWithPrices = solutions.apply(findPrices);














print(solutions.iloc[0,:])
